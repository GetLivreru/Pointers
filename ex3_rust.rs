/**
 * ü¶Ä –ó–ê–î–ê–ß–ê 3 –ù–ê RUST: –û–±–º–µ–Ω –∑–Ω–∞—á–µ–Ω–∏–π
 */

fn main() {
    println!("=== –ó–ê–î–ê–ß–ê 3: –û–±–º–µ–Ω –∑–Ω–∞—á–µ–Ω–∏–π (Rust) ===");
    
    let mut a = 10;
    let mut b = 20;
    println!("–î–æ –æ–±–º–µ–Ω–∞: a = {}, b = {}", a, b);
    
    // –°–ø–æ—Å–æ–± 1: –ß–µ—Ä–µ–∑ –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é (–∫–∞–∫ –≤ C++)
    {
        let ref_a = &mut a;
        let ref_b = &mut b;
        
        let temp = *ref_a;
        *ref_a = *ref_b;
        *ref_b = temp;
    } // —Å—Å—ã–ª–∫–∏ "—É–º–∏—Ä–∞—é—Ç" –∑–¥–µ—Å—å
    
    println!("–ü–æ—Å–ª–µ –æ–±–º–µ–Ω–∞ (—Å–ø–æ—Å–æ–± 1): a = {}, b = {}", a, b);
    
    // –°–ø–æ—Å–æ–± 2: Rust-–æ–≤—Å–∫–∏–π —ç–ª–µ–≥–∞–Ω—Ç–Ω—ã–π —Å–ø–æ—Å–æ–±!
    std::mem::swap(&mut a, &mut b);  // –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±–º–µ–Ω–∞
    
    println!("–ü–æ—Å–ª–µ –≤—Ç–æ—Ä–æ–≥–æ –æ–±–º–µ–Ω–∞ (—Å–ø–æ—Å–æ–± 2): a = {}, b = {}", a, b);
    
    // –°–ø–æ—Å–æ–± 3: –ß–µ—Ä–µ–∑ –∫–æ—Ä—Ç–µ–∂–∏ (tuple destructuring)
    (a, b) = (b, a);  // –°–∞–º—ã–π –∫—Ä–∞—Å–∏–≤—ã–π —Å–ø–æ—Å–æ–± –≤ Rust!
    
    println!("–ü–æ—Å–ª–µ —Ç—Ä–µ—Ç—å–µ–≥–æ –æ–±–º–µ–Ω–∞ (—Å–ø–æ—Å–æ–± 3): a = {}, b = {}", a, b);
}
